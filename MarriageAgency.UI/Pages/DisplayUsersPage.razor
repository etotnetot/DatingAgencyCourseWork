@page "/profiles"

<div class="flex-wrap">

    <h1>Available partners</h1>

    <SearchBarComponent OnSearch="HandleSearch"></SearchBarComponent>

    <div class="wrap">
        <button type="button" class="btn btn-primary btn-lg" @onclick="GetBestCandidates">
            Find besties!
        </button>
        <button type="button" class="btn btn-secondary btn-lg" @onclick="ShowAllUsers">
            Show all
        </button>
    </div>

</div>

<div class="row row-cols-1 row-cols-md-3 g-4">
    @if (UsersToDisplay == null)
     {
        <p><em>Loading...</em></p>
     }
     else
     {
         @foreach (var currentUser in UsersToDisplay)
          {
            <UserCardComponent CurrentUser="currentUser"></UserCardComponent>
          }
     }
</div>

<style>

    .flex-wrap {
        display: flex;
        justify-content: space-around;
        flex-direction: column;
        align-items: center;
        height: 210px;
    }

</style>

@code {
    [Inject]
    public IAgencyApiService AgencyApiService { get; set; }

    [Inject]
    public HttpClient HttpClient { get; set; }

    private IEnumerable<UserViewModel> UsersToDisplay { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var usersList = await AgencyApiService.GetUsers("GetUsers");
        UsersToDisplay = AgencyApiService.MapUsers(usersList);
    }

    private void ShowAllUsers()
    {
        //Users = calling api method in main controller
    }

    private void GetBestCandidates()
    {
        //Users = calling api method in main controller
    }

    private void HandleSearch(string searchString)
    {
        var searchQuery = (from user in UsersToDisplay
                           where user.Username.StartsWith(searchString) ||
                              user.City.StartsWith(searchString) || user.Age == Convert.ToInt32(searchString)
                           orderby user.Username
                           select user);

        UsersToDisplay = searchQuery.ToList();
        StateHasChanged();
    }
}