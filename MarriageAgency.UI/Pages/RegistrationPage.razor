@page "/registration"

<EditForm Model="@_userInputModel" OnValidSubmit="RegisterAsync" enctype="multipart/form-data" style="width:350px;">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-v10-content" style="margin-left: 60px;">
        <form class="form-detail" action="#" method="post" id="myform">
            <div class="form-left">

                <h2>Personal information</h2>

                <div class="form-group">
                    <div class="form-row form-row-1">
                        <input type="text" name="first_name" @bind="_userInputModel.User.ClientFullName" id="first_name" class="input-text" placeholder="Full Name/Nickname" required>
                    </div>
                    <div class="form-row form-row-2">
                        <input type="text" name="last_name" @bind="_userInputModel.User.ClientPassword" id="last_name" class="input-text" placeholder="Password" required>
                    </div>
                </div>

                <div class="form-row">
                    <select name="position" @onchange="@((ChangeEventArgs e) => _userInputModel.User.ClientGender = e.Value.ToString())">
                        <option value="position">Gender</option>
                        <option value="director">Male</option>
                        <option value="manager">Female</option>
                        <option value="employee">N/B</option>
                    </select>
                    <span class="select-btn">
                        <i class="zmdi zmdi-chevron-down"></i>
                    </span>
                </div>

                <div class="form-row">
                    <select name="position" @onchange="@((ChangeEventArgs e) => _userInputModel.User.BodyType = e.Value.ToString())">
                        <option value="position">Body type</option>
                        <option value="director">Спортивное</option>
                        <option value="manager">Стандартное</option>
                        <option value="employee">Атлетическое</option>
                        <option value="employee">Полное</option>
                    </select>
                    <span class="select-btn">
                        <i class="zmdi zmdi-chevron-down"></i>
                    </span>
                </div>

                <div class="form-row">
                    <select name="position" @onchange="@((ChangeEventArgs e) => _userInputModel.User.ClientKids = e.Value.ToString())">
                        <option value="position">Kids</option>
                        <option value="director">Yes</option>
                        <option value="manager">No</option>
                    </select>
                    <span class="select-btn">
                        <i class="zmdi zmdi-chevron-down"></i>
                    </span>
                </div>

                <div class="form-row">
                    <input type="text" name="company" class="company" @bind="_userInputModel.User.Email" id="company" placeholder="E-mail" required>
                </div>

                <div class="form-row">
                    <label class="labels">Profile photo</label>
                    <InputFile OnChange="HandlePhotoSelection" accept="image/*" required/>
                </div>
                
                <div class="form-row">
                    <select name="employees" @onchange="@((ChangeEventArgs e) => _userInputModel.User.EducationID = e.Value.ToString())">
                        <option value="employees">Education</option>
                        <option value="trainee">High</option>
                        <option value="colleague">Low</option>
                        <option value="associate">Middle</option>
                    </select>
                    <span class="select-btn">
                        <i class="zmdi zmdi-chevron-down"></i>
                    </span>
                </div>

                <div class="form-row">
                    <label class="labels">Date of birth</label>
                    <input type="datetime-local" id="birthdaytime" name="Birth date" @bind="_userInputModel.User.BirthDate">
                </div>

                <div class="form-row">
                    <input type="text" name="company" @bind="_userInputModel.User.ClientInformation" class="company" id="company" placeholder="About yourself" required>
                </div>

                <div class="form-row">
                    <input type="text" name="company" @bind="_userInputModel.User.ClientCity" class="company" id="company" placeholder="City" required>
                </div>

                <div class="form-row">
                    <input type="text" name="company" @bind="_userInputModel.User.ClientHobbies" class="company" id="company" placeholder="Hobbies" required>
                </div>

            </div>

            <div class="form-right">
                <h2>Partner requirements</h2>

                <div class="form-row">
                    <input type="text" name="street" @bind="_userInputModel.RequirementOfUser.AgeFrom" class="street" id="street" placeholder="Minimum age (enter a number)" required>
                </div>

                <div class="form-row">
                    <input type="text" name="additional" @bind="_userInputModel.RequirementOfUser.AgeTo" class="additional" id="additional" placeholder="Maximum age (enter a number)" required>
                </div>

                <div class="form-row form-row-4">
                    <select name="employees" @onchange="@((ChangeEventArgs e) => _userInputModel.RequirementOfUser.Education = e.Value.ToString())">
                        <option value="employees">Education</option>
                        <option value="trainee">High</option>
                        <option value="colleague">Low</option>
                        <option value="associate">Middle</option>
                    </select>
                    <span class="select-btn">
                        <i class="zmdi zmdi-chevron-down"></i>
                    </span>
                </div>

                <div class="form-row">
                    <select name="position" @onchange="@((ChangeEventArgs e) => _userInputModel.RequirementOfUser.BodyType = e.Value.ToString())">
                        <option value="position">Bodytype</option>
                        <option value="director">Спортивное</option>
                        <option value="manager">Стандартное</option>
                        <option value="employee">Атлетическое</option>
                        <option value="employee">Полное</option>
                    </select>
                    <span class="select-btn">
                        <i class="zmdi zmdi-chevron-down"></i>
                    </span>
                </div>

                <div class="form-row">
                    <select name="position" @onchange="@((ChangeEventArgs e) => _userInputModel.RequirementOfUser.PartnerGender = e.Value.ToString())">
                        <option value="position">Gender</option>
                        <option value="director">Мужской</option>
                        <option value="manager">Female</option>
                        <option value="employee">N/B</option>
                    </select>
                    <span class="select-btn">
                        <i class="zmdi zmdi-chevron-down"></i>
                    </span>
                </div>

                <div class="form-row">
                    <select name="position" @onchange="@((ChangeEventArgs e) => _userInputModel.RequirementOfUser.Kids = e.Value.ToString())">
                        <option value="position">Kids</option>
                        <option value="director">Есть</option>
                        <option value="manager">Нет</option>
                    </select>
                    <span class="select-btn">
                        <i class="zmdi zmdi-chevron-down"></i>
                    </span>
                </div>

                <div class="form-checkbox">
                    <label class="container">
                        <p>I do accept the <a href="#" class="text">Terms and Conditions</a> of your site.</p>
                        <input type="checkbox" name="checkbox">
                        <span class="checkmark"></span>
                    </label>
                </div>

                <div class="form-row-last" id="button-register">
                    <input type="submit" name="register" value="Register" style="background-color: cadetblue; border-radius: 21px; width: 225px;">
                </div>

            </div>
        </form>
    </div>
</EditForm>

@code {
    [Inject]
    public NavigationManager NavigationManager { get; set; }

    [Inject]
    public IAgencyApiService AgencyApiService { get; set; }

    [Inject]
    private ILocalStorageService _localStorageService { get; set; }

    public UserInputModel _userInputModel { get; set; }

    public User NewUser { get; set; }

    public Requirement NewRequirement { get; set; }

    protected override void OnInitialized()
    {
        _userInputModel = new UserInputModel();
        _userInputModel.User = new User ();
        _userInputModel.RequirementOfUser = new Requirement ();
    }

    private async Task HandlePhotoSelection(InputFileChangeEventArgs eventArgs)
    {
        var selectedFile = eventArgs.File;
        var buffers = new byte[selectedFile.Size];

        await selectedFile.OpenReadStream().ReadAsync(buffers);
        _userInputModel.User.ProfilePhoto = buffers;     
    }

    private void RegisterAsync()
    {
        AgencyApiService.AddUser(_userInputModel);
        @*NavigationManager.NavigateTo("/user/" + NewUser.ClientFullName);*@
        NavigationManager.NavigateTo("/login");
    }
}